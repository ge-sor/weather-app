{"version":3,"sources":["constants/action-types.js","actions/actions.js","components/ErrorPopup.js","utils/api.js","components/PlacePopup.js","components/AddPlacePopup.js","components/Card.js","App.js","reportWebVitals.js","reducers/Reducer.js","store/Store.js","index.js"],"names":["ADD_ITEM","REMOVE_ITEM","addItem","newCard","type","payload","ErrorPopup","isOpen","onClose","className","onClick","BASE_URL","handleResponse","response","ok","json","Promise","reject","status","key","PlacePopup","card","useState","forecast","setForecast","useEffect","lon","lat","coord","fetch","then","res","newForecast","temp","Math","floor","daily","day","icon","weather","description","dawnUnix","Date","sunrise","duskUnix","sunset","dawnTomorrowUnix","duskTomorrowUnix","dawnHours","getHours","duskHours","dawnTomorrowHours","duskTomorrowHours","dusk","toLocaleTimeString","timeZone","timezone","hour","minute","dawn","duskTomorrow","dawnTomorrow","radius","ct","document","getElementById","getContext","cctx","drawCircle","ctx","clearRect","beginPath","arc","PI","stroke","pics","angleA","angleB","x","center_x","cos","y","center_y","sin","xA","yA","sun","Image","src","onload","drawImage","moon","drawPoint","angle","label","fill","font","fillText","title","alt","id","width","height","connect","state","cards","items","dispatch","addCard","error","item","setItem","onSubmit","e","city","preventDefault","uuidv4","name","main","catch","required","minLength","maxLength","value","onChange","target","removeCard","onCardClick","selectedCard","setSelectedCard","isErrorPopupOpen","setIsErrorPopupOpen","isCardPopupOpen","setCardPopupOpen","isAddCardPopupOpen","setAddCardPopupOpen","handleCardClick","closeAllPopups","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","filter","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1bcfdd7.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\r\n\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\n","import { ADD_ITEM, REMOVE_ITEM } from \"../constants/action-types\";\r\n\r\nexport const addItem = (newCard) => {\r\n  return { type: ADD_ITEM, payload: newCard };\r\n};\r\n\r\nexport const removeItem = (cardId) => {\r\n  return { type: REMOVE_ITEM, payload: { id: cardId } };\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function ErrorPopup({ isOpen, onClose }) {\r\n  return (\r\n    <section className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <h2>Ошибка добавления города</h2>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export const BASE_URL = \"https://api.openweathermap.org/data/2.5\";\r\nconst handleResponse = (response) =>\r\n  response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\r\nconst key = \"e8589dd59b877616c63ff3a5270d69ff\";\r\n\r\nexport const getWeatherByCoords = (lon, lat) => {\r\n  return fetch(\r\n    `${BASE_URL}/weather?lat=${lat}&lon=${lon}&appid=${key}&lang=ru&units=metric`\r\n  ).then(handleResponse);\r\n};\r\n\r\nexport const getWeatherByCity = (city) => {\r\n  return fetch(\r\n    `${BASE_URL}/weather?q=${city}&appid=${key}&lang=ru&units=metric`\r\n  ).then(handleResponse);\r\n};\r\n\r\nexport const getForecast = (lon, lat) => {\r\n  return fetch(\r\n    `${BASE_URL}/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely&appid=${key}&units=metric&lang=ru`\r\n  ).then(handleResponse);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as api from \"../utils/api\";\r\n\r\nexport default function PlacePopup({ onClose, card }) {\r\n  const [forecast, setForecast] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      api.getForecast(card.coord.lon, card.coord.lat).then((res) => {\r\n        const newForecast = {\r\n          temp: `${Math.floor(res.daily[1].temp.day)}°C`,\r\n          icon: `http://openweathermap.org/img/wn/${res.daily[1].weather[0].icon}.png`,\r\n          weather: res.daily[1].weather.description,\r\n        };\r\n\r\n        const dawnUnix = new Date(res.daily[0].sunrise * 1000);\r\n        const duskUnix = new Date(res.daily[0].sunset * 1000);\r\n        const dawnTomorrowUnix = new Date(res.daily[1].sunrise * 1000);\r\n        const duskTomorrowUnix = new Date(res.daily[1].sunset * 1000);\r\n\r\n        const dawnHours = -dawnUnix.getHours() * 7.5 + 180;\r\n        const duskHours = -duskUnix.getHours() * 7.5 + 180;\r\n        const dawnTomorrowHours = -dawnTomorrowUnix.getHours() * 7.5 + 180;\r\n        const duskTomorrowHours = -duskTomorrowUnix.getHours() * 7.5 + 180;\r\n\r\n        newForecast.dusk = duskUnix.toLocaleTimeString([], {\r\n          timeZone: res.timezone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        newForecast.dawn = dawnUnix.toLocaleTimeString([], {\r\n          timeZone: res.timezone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        newForecast.duskTomorrow = duskTomorrowUnix.toLocaleTimeString([], {\r\n          timeZone: res.timezone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        newForecast.dawnTomorrow = dawnTomorrowUnix.toLocaleTimeString([], {\r\n          timeZone: res.timezone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        setForecast(newForecast);\r\n\r\n        let radius = 40;\r\n        let point_size = 3;\r\n        let center_x = 60;\r\n        let center_y = 60;\r\n        let font_size = \"10px\";\r\n\r\n        const c = document.getElementById(\"canvas\");\r\n        const ct = c.getContext(\"2d\");\r\n        const cc = document.getElementById(\"canvas2\");\r\n        const cctx = cc.getContext(\"2d\");\r\n\r\n        function drawCircle(ctx) {\r\n          ctx.clearRect(0, 0, 180, 100);\r\n          ctx.beginPath();\r\n          ctx.arc(center_x, center_y, radius, 0, Math.PI, true);\r\n          ctx.stroke();\r\n        }\r\n\r\n        pics(ct, dawnHours, duskHours);\r\n        pics(cctx, dawnTomorrowHours, duskTomorrowHours);\r\n\r\n        function pics(ctx, angleA, angleB) {\r\n          let x = center_x - 10 + radius * Math.cos((-angleA * Math.PI) / 180);\r\n          let y = center_y - 10 + radius * Math.sin((-angleA * Math.PI) / 180);\r\n\r\n          let xA = center_x - 10 + radius * Math.cos((-angleB * Math.PI) / 180);\r\n          let yA = center_y - 10 + radius * Math.sin((-angleB * Math.PI) / 180);\r\n\r\n          const sun = new Image();\r\n          sun.src = `http://openweathermap.org/img/wn/01d.png`;\r\n          sun.onload = function () {\r\n            ctx.drawImage(sun, x, y, 20, 20);\r\n          };\r\n          const moon = new Image();\r\n          moon.src = `http://openweathermap.org/img/wn/01n.png`;\r\n          moon.onload = function () {\r\n            ctx.drawImage(moon, xA, yA, 20, 20);\r\n          };\r\n        }\r\n\r\n        function drawPoint(angle, label, ctx) {\r\n          let x = center_x + radius * Math.cos((-angle * Math.PI) / 180);\r\n          let y = center_y + radius * Math.sin((-angle * Math.PI) / 180);\r\n\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, point_size, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n\r\n          ctx.font = font_size;\r\n          ctx.fillText(label, x + 10, y);\r\n        }\r\n\r\n        //Execution\r\n        drawCircle(ct);\r\n        drawPoint(dawnHours, forecast.dawn, ct);\r\n        drawPoint(duskHours, forecast.dusk, ct);\r\n\r\n        drawCircle(cctx);\r\n        drawPoint(dawnTomorrowHours, forecast.dawnTomorrow, cctx);\r\n        drawPoint(duskTomorrowHours, forecast.duskTomorrow, cctx);\r\n      });\r\n    }\r\n  }, [\r\n    card,\r\n    forecast.dawn,\r\n    forecast.dawnTomorrow,\r\n    forecast.dusk,\r\n    forecast.duskTomorrow,\r\n  ]);\r\n\r\n  return (\r\n    <section className={`popup ${card && \"popup_opened\"}`}>\r\n      <div className=\"popup__container popup__container_place\">\r\n        <h2 className=\"card__text\">{card?.title}</h2>\r\n        <h3>Сегодня</h3>\r\n        <div className=\"card__container\">\r\n          <p>{card?.temp}</p>\r\n\r\n          <img className=\"card__image\" src={card?.icon} alt={card?.weather} />\r\n          <p className=\"card__time-text\">Рассвет: {forecast.dawn}</p>\r\n          <p className=\"card__time-text\">Закат: {forecast.dusk}</p>\r\n        </div>\r\n        <canvas id=\"canvas\" width=\"180\" height=\"80\"></canvas>\r\n\r\n        <h3>Завтра</h3>\r\n        <div className=\"card__container\">\r\n          <p>{forecast.temp}</p>\r\n\r\n          <img\r\n            className=\"card__image\"\r\n            src={forecast.icon}\r\n            alt={forecast.weather}\r\n          />\r\n          <p className=\"card__time-text\">Рассвет: {forecast.dawnTomorrow}</p>\r\n          <p className=\"card__time-text\">Закат: {forecast.duskTomorrow}</p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n        <canvas id=\"canvas2\" width=\"180\" height=\"80\"></canvas>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../actions/actions\";\r\nimport * as api from \"../utils/api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction AddPlacePopup({ addCard, isOpen, onClose, error }) {\r\n  const [item, setItem] = useState({\r\n    title: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setItem({\r\n        title: \"\",\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  function handleChange(e) {\r\n    setItem({\r\n      title: e.target.value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    api\r\n      .getWeatherByCity(item.title)\r\n      .then((res) => {\r\n\r\n        const newCard = {\r\n          id: uuidv4(),\r\n          title: res.name,\r\n          temp: `${Math.floor(res.main.temp)}°C`,\r\n          icon: `http://openweathermap.org/img/wn/${res.weather[0].icon}.png`,\r\n          coord: {\r\n            lon: res.coord.lon,\r\n            lat: res.coord.lat,\r\n          },\r\n        };\r\n        addCard(newCard);\r\n        onClose();\r\n      })\r\n      .catch(() => {\r\n        onClose();\r\n        error();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <section className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <h2>Добавить новый город</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            minLength=\"3\"\r\n            maxLength=\"40\"\r\n            value={item.title || \"\"}\r\n            onChange={handleChange}\r\n            className=\"form__input\"\r\n          ></input>\r\n          <button type=\"submit\" className=\"button submit-btn\"></button>\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cards: state.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCard: (card) => dispatch(addItem(card)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlacePopup);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeItem } from \"../actions/actions\";\r\n\r\nfunction Card({ card, removeCard, onCardClick }) {\r\n  function handleDelete(id) {\r\n    removeCard(id);\r\n  }\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card__container\">\r\n      <li className=\"card\" onClick={handleClick}>\r\n        <h2 className=\"card__text\">{card.title}</h2>\r\n        <p>{card.temp}</p>\r\n\r\n        <img className=\"card__image\" src={card.icon} alt={card.weather} />\r\n      </li>\r\n      <button\r\n        className={\r\n          card.title !== \"Моё местоположение\"\r\n            ? \"button delete-btn\"\r\n            : \"button_inactive\"\r\n        }\r\n        type=\"button\"\r\n        onClick={() => handleDelete(card.id)}\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeCard: (id) => dispatch(removeItem(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Card);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"./actions/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ErrorPopup from \"./components/ErrorPopup\";\nimport PlacePopup from \"./components/PlacePopup\";\nimport AddPlacePopup from \"./components/AddPlacePopup\";\nimport Card from \"./components/Card\";\nimport * as api from \"./utils/api\";\n\nimport \"./App.css\";\n\nconst App = ({ cards, addCard }) => {\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [isErrorPopupOpen, setIsErrorPopupOpen] = useState(false);\n  const [isCardPopupOpen, setCardPopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n\n  function handleError() {\n    setIsErrorPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleAddCardClick() {\n    setAddCardPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsErrorPopupOpen(false);\n    setCardPopupOpen(false);\n    setAddCardPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      api\n        .getWeatherByCoords(position.coords.longitude, position.coords.latitude)\n        .then((res) => {\n          const newCard = {\n            id: uuidv4(),\n            title: \"Моё местоположение\",\n            temp: `${Math.floor(res.main.temp)}°C`,\n            icon: `http://openweathermap.org/img/wn/${res.weather[0].icon}.png`,\n            weather: res.weather[0].description,\n            coord: {\n              lon: res.coord.lon,\n              lat: res.coord.lat,\n            },\n          };\n          addCard(newCard);\n        })\n        .catch(() => {\n          setIsErrorPopupOpen(true);\n        });\n    });\n  }, [addCard]);\n\n  return (\n    <div className=\"page\">\n      <ul className=\"cards__list\">\n        {cards.map((card) => (\n          <Card\n            className=\"card\"\n            key={card.id}\n            card={card}\n            onCardClick={handleCardClick}\n          />\n        ))}\n      </ul>\n      <button className=\"button new-place-btn\" onClick={handleAddCardClick} />\n\n      <ErrorPopup isOpen={isErrorPopupOpen} onClose={closeAllPopups} />\n\n      <PlacePopup\n        card={selectedCard}\n        isOpen={isCardPopupOpen}\n        onClose={closeAllPopups}\n      />\n\n      <AddPlacePopup\n        isOpen={isAddCardPopupOpen}\n        onClose={closeAllPopups}\n        error={handleError}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cards: state.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCard: (card) => dispatch(addItem(card)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_ITEM, REMOVE_ITEM } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nexport default function Reducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ITEM: {\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    }\r\n    case REMOVE_ITEM: {\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id !== action.payload.id),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport Reducer from \"../reducers/Reducer\";\r\n\r\nconst store = createStore(Reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/Store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}