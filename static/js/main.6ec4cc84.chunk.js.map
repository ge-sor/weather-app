{"version":3,"sources":["constants/action-types.js","actions/actions.js","components/ErrorPopup.js","utils/api.js","components/PlacePopup.js","components/AddPlacePopup.js","components/Card.js","App.js","reportWebVitals.js","reducers/Reducer.js","store/Store.js","index.js"],"names":["ADD_ITEM","REMOVE_ITEM","addItem","newCard","type","payload","ErrorPopup","isOpen","onClose","className","onClick","BASE_URL","handleResponse","response","ok","json","Promise","reject","status","key","PlacePopup","card","useState","forecast","setForecast","useEffect","lon","lat","coord","fetch","then","res","newForecast","temp","Math","floor","daily","day","icon","weather","description","dawnUnix","Date","sunrise","duskUnix","sunset","dawnTomorrowUnix","duskTomorrowUnix","dusk","toLocaleTimeString","timeZone","hour","minute","dawn","duskTomorrow","dawnTomorrow","title","src","alt","connect","state","cards","items","dispatch","addCard","error","item","setItem","onSubmit","e","city","preventDefault","console","log","id","uuidv4","name","main","catch","err","required","minLength","maxLength","value","onChange","target","removeCard","onCardClick","selectedCard","setSelectedCard","isErrorPopupOpen","setIsErrorPopupOpen","isCardPopupOpen","setCardPopupOpen","isAddCardPopupOpen","setAddCardPopupOpen","handleCardClick","closeAllPopups","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ec4cc84.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\r\n\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\n","import { ADD_ITEM, REMOVE_ITEM } from \"../constants/action-types\";\r\n\r\nexport const addItem = (newCard) => {\r\n  return { type: ADD_ITEM, payload: newCard };\r\n};\r\n\r\nexport const removeItem = (cardId) => {\r\n  return { type: REMOVE_ITEM, payload: { id: cardId } };\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function ErrorPopup({ isOpen, onClose }) {\r\n  return (\r\n    <section className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <h2>Ошибка добавления города</h2>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export const BASE_URL = \"https://api.openweathermap.org/data/2.5\";\r\nconst handleResponse = (response) =>\r\n  response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\r\nconst key = \"e8589dd59b877616c63ff3a5270d69ff\";\r\n\r\nexport const getWeatherByCoords = (lon, lat) => {\r\n  return fetch(\r\n    `${BASE_URL}/weather?lat=${lat}&lon=${lon}&appid=${key}&lang=ru&units=metric`\r\n  ).then(handleResponse);\r\n};\r\n\r\nexport const getWeatherByCity = (city) => {\r\n  return fetch(\r\n    `${BASE_URL}/weather?q=${city}&appid=${key}&lang=ru&units=metric`\r\n  ).then(handleResponse);\r\n};\r\n\r\nexport const getForecast = (lon, lat) => {\r\n  return fetch(\r\n    `${BASE_URL}/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely,current&appid=${key}&units=metric&lang=ru`\r\n  ).then(handleResponse);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as api from \"../utils/api\";\r\n\r\nexport default function PlacePopup({ onClose, card }) {\r\n  const [forecast, setForecast] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      api.getForecast(card.coord.lon, card.coord.lat).then((res) => {\r\n\r\n        const newForecast = {\r\n          temp: `${Math.floor(res.daily[1].temp.day)}°C`,\r\n          icon: `http://openweathermap.org/img/wn/${res.daily[1].weather[0].icon}.png`,\r\n          weather: res.daily[1].weather.description,\r\n        };\r\n\r\n        const dawnUnix = new Date(res.daily[0].sunrise * 1000);\r\n        const duskUnix = new Date(res.daily[0].sunset * 1000);\r\n        const dawnTomorrowUnix = new Date(res.daily[1].sunrise * 1000);\r\n        const duskTomorrowUnix = new Date(res.daily[1].sunset * 1000);\r\n\r\n        newForecast.dusk = duskUnix.toLocaleTimeString([], {\r\n          timeZone: res.timeZone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        newForecast.dawn = dawnUnix.toLocaleTimeString([], {\r\n          timeZone: res.timeZone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        newForecast.duskTomorrow = duskTomorrowUnix.toLocaleTimeString([], {\r\n          timeZone: res.timeZone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        newForecast.dawnTomorrow = dawnTomorrowUnix.toLocaleTimeString([], {\r\n          timeZone: res.timeZone,\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n        });\r\n        setForecast(newForecast);\r\n      });\r\n    }\r\n  }, [card]);\r\n\r\n  return (\r\n    <section className={`popup ${card && \"popup_opened\"}`}>\r\n      <div className=\"popup__container popup__container_place\">\r\n        <h2 className=\"card__text\">{card?.title}</h2>\r\n        <h3>Сегодня</h3>\r\n        <div className=\"card__container\">\r\n          <p>{card?.temp}</p>\r\n\r\n          <img className=\"card__image\" src={card?.icon} alt={card?.weather} />\r\n          <p className=\"card__time-text\">Рассвет: {forecast.dawn}</p>\r\n          <p className=\"card__time-text\">Закат: {forecast.dusk}</p>\r\n        </div>\r\n        <h3>Завтра</h3>\r\n        <div className=\"card__container\">\r\n          <p>{forecast.temp}</p>\r\n\r\n          <img\r\n            className=\"card__image\"\r\n            src={forecast.icon}\r\n            alt={forecast.weather}\r\n          />\r\n          <p className=\"card__time-text\">Рассвет: {forecast.dawnTomorrow}</p>\r\n          <p className=\"card__time-text\">Закат: {forecast.duskTomorrow}</p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../actions/actions\";\r\nimport * as api from \"../utils/api\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction AddPlacePopup({ addCard, isOpen, onClose, error }) {\r\n  const [item, setItem] = useState({\r\n    title: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setItem({\r\n        title: \"\",\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  function handleChange(e) {\r\n    setItem({\r\n      title: e.target.value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    api\r\n      .getWeatherByCity(item.title)\r\n      .then((res) => {\r\n        console.log(res);\r\n        const newCard = {\r\n          id: uuidv4(),\r\n          title: res.name,\r\n          temp: `${Math.floor(res.main.temp)}°C`,\r\n          icon: `http://openweathermap.org/img/wn/${res.weather[0].icon}.png`,\r\n          coord: {\r\n            lon: res.coord.lon,\r\n            lat: res.coord.lat,\r\n          },\r\n        };\r\n        addCard(newCard);\r\n        console.log(newCard);\r\n        onClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        error();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <section className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <h2>Добавить новый город</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            minLength=\"3\"\r\n            maxLength=\"40\"\r\n            value={item.title || \"\"}\r\n            onChange={handleChange}\r\n            className=\"form__input\"\r\n          ></input>\r\n          <button type=\"submit\" className=\"button submit-btn\"></button>\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cards: state.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCard: (card) => dispatch(addItem(card)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlacePopup);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeItem } from \"../actions/actions\";\r\n\r\nfunction Card({ card, removeCard, onCardClick }) {\r\n  function handleDelete(id) {\r\n    removeCard(id);\r\n  }\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card__container\">\r\n      <li className=\"card\" onClick={handleClick}>\r\n        <h2 className=\"card__text\">{card.title}</h2>\r\n        <p>{card.temp}</p>\r\n\r\n        <img className=\"card__image\" src={card.icon} alt={card.weather} />\r\n      </li>\r\n      <button\r\n        className={\r\n          card.title !== \"Моё местоположение\"\r\n            ? \"button delete-btn\"\r\n            : \"button_inactive\"\r\n        }\r\n        type=\"button\"\r\n        onClick={() => handleDelete(card.id)}\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeCard: (id) => dispatch(removeItem(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Card);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"./actions/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ErrorPopup from \"./components/ErrorPopup\";\nimport PlacePopup from \"./components/PlacePopup\";\nimport AddPlacePopup from \"./components/AddPlacePopup\";\nimport Card from \"./components/Card\";\nimport * as api from \"./utils/api\";\n\nimport \"./App.css\";\n\nconst App = ({ cards, addCard }) => {\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [isErrorPopupOpen, setIsErrorPopupOpen] = useState(false);\n  const [isCardPopupOpen, setCardPopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n\n  function handleError() {\n    setIsErrorPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleAddCardClick() {\n    setAddCardPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsErrorPopupOpen(false);\n    setCardPopupOpen(false);\n    setAddCardPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      api\n        .getWeatherByCoords(position.coords.longitude, position.coords.latitude)\n        .then((res) => {\n          const newCard = {\n            id: uuidv4(),\n            title: \"Моё местоположение\",\n            temp: `${Math.floor(res.main.temp)}°C`,\n            icon: `http://openweathermap.org/img/wn/${res.weather[0].icon}.png`,\n            weather: res.weather[0].description,\n            coord: {\n              lon: res.coord.lon,\n              lat: res.coord.lat,\n            },\n          };\n          addCard(newCard);\n        })\n        .catch((err) => {\n          setIsErrorPopupOpen(true);\n          console.log(err);\n        });\n    });\n  }, [addCard]);\n\n  return (\n    <div className=\"page\">\n      <ul className=\"cards__list\">\n        {cards.map((card) => (\n          <Card\n            className=\"card\"\n            key={card.id}\n            card={card}\n            onCardClick={handleCardClick}\n          />\n        ))}\n      </ul>\n      <button className=\"button new-place-btn\" onClick={handleAddCardClick} />\n\n      <ErrorPopup isOpen={isErrorPopupOpen} onClose={closeAllPopups} />\n\n      <PlacePopup\n        card={selectedCard}\n        isOpen={isCardPopupOpen}\n        onClose={closeAllPopups}\n      />\n\n      <AddPlacePopup\n        isOpen={isAddCardPopupOpen}\n        onClose={closeAllPopups}\n        error={handleError}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cards: state.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCard: (card) => dispatch(addItem(card)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_ITEM, REMOVE_ITEM } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nexport default function Reducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ITEM: {\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    }\r\n    case REMOVE_ITEM: {\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id !== action.payload.id),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport Reducer from \"../reducers/Reducer\";\r\n\r\nconst store = createStore(Reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/Store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}